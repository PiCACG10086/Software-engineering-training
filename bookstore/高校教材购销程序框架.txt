高校教材购销程序框架说明
========================================

项目名称：高校教材购销管理系统
开发语言：Java
界面框架：JavaFX
数据库：MySQL
构建工具：Maven

一、项目概述
----------------------------------------
本系统是一个基于JavaFX的高校教材购销管理系统，主要用于管理高校教材的采购、销售、库存等业务。
系统支持多角色用户（管理员、教师、学生），提供完整的教材管理功能。

二、技术架构
----------------------------------------
1. 表现层（Presentation Layer）
   - JavaFX界面框架
   - FXML布局文件
   - CSS样式文件

2. 业务逻辑层（Business Logic Layer）
   - Service层：业务逻辑处理
   - Controller层：界面控制器

3. 数据访问层（Data Access Layer）
   - DAO模式实现
   - 数据库连接池（HikariCP）

4. 数据库层（Database Layer）
   - MySQL数据库
   - 数据库名称：bookstore

三、数据库配置
----------------------------------------
数据库服务器：localhost:3306
数据库名称：bookstore
用户名：root
密码：123456
字符集：utf8
排序规则：utf8_general_ci

四、项目结构
----------------------------------------
bookstore/
├── src/main/java/
│   └── com/university/bookstore/
│       ├── BookstoreApplication.java  # JavaFX应用主类
│       ├── Launcher.java            # 程序启动类
│       ├── dao/                     # 数据访问层接口
│       │   ├── BookDAO.java
│       │   ├── OrderDAO.java
│       │   └── UserDAO.java
│       │   └── impl/                  # 数据访问层实现
│       │       ├── BookDAOImpl.java
│       │       ├── OrderDAOImpl.java
│       │       └── UserDAOImpl.java
│       ├── model/                   # 数据模型层
│       │   ├── Book.java
│       │   ├── CartItem.java
│       │   ├── Course.java
│       │   ├── Department.java
│       │   ├── Order.java
│       │   ├── OrderDetail.java
│       │   └── User.java
│       ├── service/                 # 业务逻辑层接口
│       │   ├── BookService.java
│       │   ├── OrderService.java
│       │   └── UserService.java
│       │   └── impl/                  # 业务逻辑层实现
│       │       ├── BookServiceImpl.java
│       │       ├── OrderServiceImpl.java
│       │       └── UserServiceImpl.java
│       ├── ui/                      # 界面控制器
│       │   ├── AdminMainController.java
│       │   ├── BaseController.java
│       │   ├── LoginController.java
│       │   ├── RegisterController.java
│       │   ├── StudentMainController.java
│       │   └── TeacherMainController.java
│       └── util/                    # 工具类
│           └── DBUtil.java
├── src/main/resources/
│   ├── fxml/                    # FXML界面文件
│   │   ├── admin_main.fxml
│   │   ├── change_password_dialog.fxml
│   │   ├── login.fxml
│   │   ├── register.fxml
│   │   ├── student_main.fxml
│   │   ├── teacher_main.fxml
│   │   └── user_dialog.fxml
│   └── css/                     # 样式文件
│       └── style.css
├── database/                    # 数据库脚本
│   ├── init.sql                # 数据库初始化脚本
│   └── fix_order_table.sql     # 订单表修复脚本
│   └── reset_and_reinit.sql    # 重置并重新初始化数据库脚本
├── pom.xml                      # Maven配置文件
├── README.md                    # 项目说明文档
├── DATABASE_SETUP.md            # 数据库设置说明
├── DATABASE_SETUP_GUIDE.md      # 数据库设置指南
└── run.bat                      # 运行脚本

五、数据库表结构
----------------------------------------
1. t_user（用户表）
   - id：用户ID（主键）
   - username：登录用户名
   - password：密码
   - role：用户角色 (STUDENT, TEACHER, ADMIN)
   - name：真实姓名
   - student_id：学号(仅学生使用)
   - create_time：创建时间

2. t_book（图书表）
   - id：图书ID（主键）
   - title：书名
   - author：作者
   - publisher：出版社
   - isbn：ISBN号
   - price：价格
   - stock：库存数量
   - description：图书描述
   - create_time：创建时间

3. t_order（订单表）
   - id：订单ID（主键）
   - order_number：订单号
   - user_id：用户ID
   - total_amount：总金额
   - status：订单状态 (PENDING, PAID, CONFIRMED, SHIPPED, COMPLETED, CANCELLED)
   - create_time：创建时间
   - update_time：更新时间

4. t_order_item（订单详情表）
   - id：订单项ID（主键）
   - order_id：订单ID
   - book_id：图书ID
   - quantity：数量
   - price：单价

5. t_cart（购物车表）
   - id：购物车ID（主键）
   - user_id：用户ID
   - book_id：图书ID
   - quantity：数量
   - create_time：创建时间

注：t_course 和 t_course_book 为扩展功能预留，当前未使用。

六、默认用户账户
----------------------------------------
管理员账户：
- 用户名：admin
- 密码：admin123
- 姓名：系统管理员

教师账户：
- 用户名：teacher001~teacher006
- 密码：teacher123
- 姓名：张教授、李老师、王副教授、刘老师、陈教授、赵老师

学生账户：
- 用户名：student001~student006
- 密码：student123
- 姓名：张小明、李小红、王小强、刘小芳、陈小华、赵小军
- 学号：2021001~2021006

七、主要功能模块
----------------------------------------
1.  **通用模块**
    *   **登录**：提供学生、教师、管理员三种角色的统一登录入口。
    *   **个人信息管理**：所有角色的用户都可以查看个人信息、修改密码以及安全退出登录。

2.  **管理员模块 (`AdminMainController`)**
    *   **图书管理**：
        *   全面的图书信息维护，包括添加、编辑和删除教材。
        *   支持按关键字（书名、作者、出版社）搜索图书。
    *   **用户管理**：
        *   管理系统中的所有用户（学生、教师、管理员）。
        *   功能包括添加新用户、编辑用户信息、删除用户以及重置用户密码。
    *   **订单管理**：
        *   集中管理系统中的所有订单。
        *   功能包括查看订单详情、确认订单、处理发货、取消订单以及删除订单记录。
        *   支持按订单号或学生信息搜索订单，并可按订单状态（如待处理、已发货）进行筛选。

3.  **学生模块 (`StudentMainController`)**
    *   **图书浏览与购买**：
        *   浏览所有上架的教材信息。
        *   按关键字搜索所需图书。
    *   **购物车管理**：
        *   将选定的图书加入购物车。
        *   在购物车中可以修改图书数量或移除图书。
        *   一键清空购物车或进行结算，生成订单。
    *   **订单中心**：
        *   查看个人的所有历史订单及订单状态。
        *   可对订单进行支付（模拟）、确认收货或取消订单等操作。
        *   支持按订单状态筛选自己的订单。

4.  **教师模块 (`TeacherMainController`)**
    *   **图书信息查看**：
        *   浏览和搜索系统中的所有教材信息，以便为课程选择参考资料。
    *   **学生管理**：
        *   查看所有学生的列表信息。
        *   能够按学生姓名或学号进行搜索。
    *   **订单查看**：
        *   查看所有学生的订单信息，以了解教材的购买情况。
        *   支持按订单号或学生信息搜索，并可按订单状态进行筛选。

八、运行环境要求
----------------------------------------
- JDK 8或以上版本
- MySQL 5.7或以上版本
- Maven 3.6或以上版本
- JavaFX运行时环境

九、部署说明
----------------------------------------
1. 安装MySQL数据库
2. 创建数据库：CREATE DATABASE bookstore;
3. 执行初始化脚本：database/init.sql
4. 配置数据库连接参数（DBUtil.java）
5. 使用Maven编译项目：mvn clean compile
6. 运行项目：mvn javafx:run 或使用run.bat

十、注意事项
----------------------------------------
1. 确保MySQL服务正常运行
2. 检查数据库连接参数配置
3. 确保JavaFX运行时环境正确安装
4. 注意数据库字符集设置为utf8
5. 系统使用明文密码存储，生产环境需要加密处理

========================================
文档更新时间：2024年
版本：v1.1
========================================